#use <string>
#use <conio>

int partition(int[] A, int pi, int lo, int hi);
void swap(int[] A, int i, int j);
void qsort(int[] A, int lo, int hi);


void qsort(int[] A, int lo, int hi)
{
   if (hi > lo + 1){
      int pi = partition(A, hi-1, lo, hi);
      qsort(A, lo, pi);
      qsort(A, pi + 1, hi);
   }
   else{
      return;
   }
}

int partition(int[] A, int pi, int lo, int hi)  // 1, 0 , 2
{
  swap(A, lo, pi); // swap(A, 0, 1)
  int right = hi - 1; // right = 1
  int left = lo + 1; // left = 0, lo = 0
  while(left <= right)
  {
    if(A[left] > A[lo]){
       swap(A, left, right);
       right--;
    }
    else{
       left++;
    }
  }
  printint(left);printint(right);println("");
  swap(A, lo, left);

  return left;
}

void swap(int[] A, int i, int j)
{
   int temp = A[i];
   A[i] = A[j];
   A[j] = temp;
}

int main()
{
  println("** Testing partition **");
  int[] A = alloc_array(int, 15);

  for(int i = 0; i < 2; i++){
     A[i] = 122 - i*i;
     printint(A[i]); println("");
  }

  int pivot = partition(A, 1, 0, 2);
  print("Pivot = "); printint(pivot); println("");

  for(int i = 0; i < 2; i++){
     printint(A[i]); println("");
  }

  println("** Testing qsort **");

  int[] B = alloc_array(int, 15);

  println("** Before qsort **");

  for(int i = 0; i < 15; i++){
     B[i] = 122 - i*i;
     printint(B[i]); println("");
  }
  qsort(B, 0, 15);

  println("** After qsort **");
  for(int i = 0; i < 15; i++){
     printint(B[i]); println("");
  }
  return 0;  
}
