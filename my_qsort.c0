#use <string>
#use <conio>

int partition(int[] A, int pi, int lo, int hi);
void swap(int[] A, int i, int j);
void qsort(int[] A, int lo, int hi);


void qsort(int[] A, int lo, int hi)
{
   if (hi > lo){
      int pi = partition(A, hi-1, lo, hi);
      qsort(A, lo, pi);
      qsort(A, pi, hi);
   }
   else{
      return;
   }
}

int partition(int[] A, int pi, int lo, int hi)
{
  printint(lo);
  printint(hi);
  println("In partition");
  swap(A, lo, pi);
  int right = hi - 1;
  int left = lo + 1;
  for(int i = lo+1; i < hi; i++){
    if(A[i] > A[lo]){
       swap(A, i, right);
       right--;
    }
    else{
       left++;
    }
  }
  swap(A, lo, left);
  return left;
}

void swap(int[] A, int i, int j)
{
   int temp = A[i];
   A[i] = A[j];
   A[j] = temp;
}

int main()
{
  int[] A = alloc_array(int, 15);
  for(int i = 0; i < 15; i++){
     A[i] = 122 - i*i;
     printint(A[i]); println("");
  }
  qsort(A, 0, 15);

  for(int i = 0; i < 15; i++){
     printint(A[i]); println("");
  }
  return 0;  
}
